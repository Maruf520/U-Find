{"version":3,"file":"rootline-dialog.js","sources":["../../../projects/rootline-dialog/src/lib/rootline-dialog.config.ts","../../../projects/rootline-dialog/src/lib/rootline-dialog/rootline-dialog.component.html","../../../projects/rootline-dialog/src/lib/rootline-dialog/rootline-dialog.component.ts","../../../projects/rootline-dialog/src/lib/rootline-dialog.service.ts","../../../projects/rootline-dialog/src/lib/rootline-dialog.module.ts","../../../projects/rootline-dialog/src/public-api.ts","../../../projects/rootline-dialog/src/rootline-dialog.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\r\nimport { ThemePalette } from \"@angular/material/core\";\r\n\r\nexport interface ModalConfig {\r\n    warnColor: string;\r\n    successColor: string;\r\n    errorColor: string;\r\n    generalColor: string;\r\n    type: 'success' | 'warn' | 'error' | 'general';\r\n    matIcon: string;\r\n    localIcon: string;\r\n    headerText: string;\r\n    description: string;\r\n    primaryButtonName: string;\r\n    secondaryButtonName: string;\r\n    modalWidth: string;\r\n    disableClose: boolean;\r\n    isLoader: boolean;\r\n    loaderText: string;\r\n    panelClass: string | string[];\r\n    color: ThemePalette;\r\n    primaryEvent: (event) => any;\r\n    secondaryEvent: (event) => any;\r\n}\r\n\r\nexport const DefaultConfig: Partial<ModalConfig> = {\r\n    successColor: '#009900 ',\r\n    errorColor: '#ff0000 ',\r\n    warnColor: '#FFCC00 ',\r\n    generalColor: '#242424',\r\n    type: 'general',\r\n    modalWidth: 'auto',\r\n    disableClose: false,\r\n    isLoader: false,\r\n    loaderText: 'Loading ...',\r\n    color: 'primary',\r\n    primaryEvent: () => { },\r\n    secondaryEvent: () => { },\r\n};\r\n\r\nexport interface ModalToken {\r\n    default: ModalConfig;\r\n    config: Partial<ModalConfig>;\r\n}\r\n\r\nexport const ROOTLINE_MODAL_CONFIG = new InjectionToken<ModalToken>(\r\n    'ModalToken'\r\n);\r\n","<div fxLayout=\"column\" fxLayoutGap=\"30px\" *ngIf=\"!modalConfig.isLoader\">\n    <div fxLayout=\"column\" fxLayoutGap=\"20px\">\n        <div *ngIf=\"modalConfig.matIcon && !modalConfig.localIcon\" fxLayoutAlign=\"center center\" class=\"modal-icon\">\n            <mat-icon [style.color]=\"typeColor\">{{ modalConfig.matIcon }}</mat-icon>\n        </div>\n        <div *ngIf=\"modalConfig.localIcon\" class=\"modal-icon\" fxLayoutAlign=\"center center\">\n            <mat-icon [svgIcon]=\"modalConfig.localIcon\" [style.color]=\"typeColor\"></mat-icon>\n        </div>\n        <div fxLayout=\"column\" fxLayoutGap=\"15px\">\n            <div fxLayoutAlign=\"center center\" *ngIf=\"modalConfig.headerText\">\n                <span class=\"text-center modal-header\">{{\n                    modalConfig.headerText\n                    }}</span>\n            </div>\n            <div fxLayoutAlign=\"center center\" *ngIf=\"modalConfig.description\">\n                <span class=\"modal-description\">{{ modalConfig.description }}</span>\n            </div>\n        </div>\n    </div>\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap=\"20px\">\n        <button mat-stroked-button class=\"outline-secondary-button\" [color]=\"modalConfig.color\"\n            *ngIf=\"modalConfig.secondaryButtonName\" (click)=\"secodaryButton($event)\">\n            {{ modalConfig.secondaryButtonName }}\n        </button>\n        <button mat-raised-button [color]=\"modalConfig.color\" *ngIf=\"modalConfig.primaryButtonName\"\n            (click)=\"primaryButton($event)\">\n            {{ modalConfig.primaryButtonName }}\n        </button>\n    </div>\n</div>\n<div *ngIf=\"modalConfig.isLoader\" fxLayoutAlign=\"start center\" fxLayoutGap=\"30px\">\n    <div>\n        <mat-spinner diameter=\"40\" [color]=\"modalConfig.color\"></mat-spinner>\n    </div>\n    <div>\n        <span style=\"font-size: 16px\">{{ modalConfig.loaderText }}</span>\n    </div>\n</div>\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ModalConfig } from '../rootline-dialog.config';\n\n@Component({\n  selector: 'rootline-dialog',\n  templateUrl: './rootline-dialog.component.html',\n  styleUrls: ['./rootline-dialog.component.scss']\n})\nexport class RootlineDialogComponent {\n  modalConfig: Partial<ModalConfig>;\n  typeColor: string;\n  constructor (\n    @Inject(MAT_DIALOG_DATA) config: Partial<ModalConfig>,\n    private ref: MatDialogRef<RootlineDialogComponent>\n  ) {\n    this.modalConfig = config;\n    this.typeColor = this.setModalColor(this.modalConfig);\n  }\n\n  primaryButton(event) {\n    this.modalConfig.primaryEvent(event);\n    this.ref.close();\n  }\n  secodaryButton(event) {\n    this.modalConfig.secondaryEvent(event);\n    this.ref.close();\n  }\n\n  private setModalColor(config: Partial<ModalConfig>) {\n    if (config.type == 'general') {\n      return config.generalColor;\n    } else if (config.type == 'success') {\n      return config.successColor;\n    } else if (config.type == 'warn') {\n      return config.warnColor;\n    } else if (config.type == 'error') {\n      return config.errorColor;\n    }\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { ROOTLINE_MODAL_CONFIG, ModalConfig, ModalToken } from './rootline-dialog.config';\nimport { RootlineDialogComponent } from './rootline-dialog/rootline-dialog.component';\n\n@Injectable()\nexport class RootlineDialogService {\n  modalConfig: Partial<ModalConfig>;\n  constructor (\n    private dialog: MatDialog,\n    @Inject(ROOTLINE_MODAL_CONFIG) token: ModalToken\n  ) {\n    this.modalConfig = {\n      ...token.default,\n      ...token.config,\n    };\n    this.modalConfig = this.verifyConfig(this.modalConfig);\n  }\n\n  private applyConfig(config: Partial<ModalConfig>): Partial<ModalConfig> {\n    config = this.verifyConfig(config);\n\n    return { ...this.modalConfig, ...config };\n  }\n\n  private verifyConfig(config: Partial<ModalConfig>): Partial<ModalConfig> {\n    let verfiedConfig: Partial<ModalConfig> = { ...config };\n    if (config.isLoader) {\n      verfiedConfig.modalWidth = 'auto';\n    }\n    return verfiedConfig;\n  }\n\n  private openDialog(config: Partial<ModalConfig> = {}) {\n    let dialogConfig = this.applyConfig(config);\n\n    return this.dialog.open(RootlineDialogComponent, {\n      width: dialogConfig.modalWidth,\n      disableClose: dialogConfig.disableClose,\n      panelClass: dialogConfig.panelClass,\n      data: dialogConfig,\n    });\n  }\n\n  openConfirmationModal(\n    config: Partial<ModalConfig> = {}\n  ): MatDialogRef<RootlineDialogComponent> {\n    return this.openDialog(config);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { ModuleWithProviders } from '@angular/core';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { RootlineDialogComponent } from './rootline-dialog/rootline-dialog.component';\nimport { DefaultConfig, ModalConfig, ROOTLINE_MODAL_CONFIG } from './rootline-dialog.config';\nimport { RootlineDialogService } from './rootline-dialog.service';\n\nexport const DefaultComponentConfig: Partial<ModalConfig> = {\n  ...DefaultConfig,\n};\n\n@NgModule({\n  declarations: [RootlineDialogComponent],\n  imports: [\n    CommonModule,\n    MatDialogModule,\n    FlexLayoutModule,\n    MatButtonModule,\n    MatIconModule,\n    MatProgressSpinnerModule\n  ],\n  providers: [RootlineDialogService],\n  exports: [RootlineDialogComponent]\n})\nexport class RootlineDialogModule {\n  static forChild(config: Partial<ModalConfig> = {}): ModuleWithProviders<RootlineDialogModule> {\n    return {\n      ngModule: RootlineDialogModule,\n      providers: [\n        {\n          provide: ROOTLINE_MODAL_CONFIG,\n          useValue: {\n            default: DefaultComponentConfig,\n            config,\n          },\n        },\n      ],\n    };\n  }\n}\n","/*\n * Public API Surface of rootline-dialog\n */\n\nexport * from './lib/rootline-dialog.service';\nexport * from './lib/rootline-dialog/rootline-dialog.component';\nexport * from './lib/rootline-dialog.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵstyleProp","i0.ɵɵtextInterpolate","i0.ɵɵelement","i0.ɵɵproperty","i0.ɵɵlistener","i0.ɵɵtextInterpolate1","i0.ɵɵtemplate"],"mappings":"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"}